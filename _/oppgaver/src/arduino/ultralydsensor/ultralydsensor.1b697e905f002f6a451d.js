webpackJsonp([67,426],{1323:function(e,s,n){e.exports={frontmatter:n(334),content:n(2490)}},2490:function(e,s,n){e.exports="<section class=intro id=introduksjon> <h1 class=intro id=introduksjon>Introduksjon</h1> <p>I denne oppgaven skal vi se på bruken av en ultralydsensor.</p> </section> <section class=activity id=litt-om-ultralydsensorer> <h1 class=activity id=litt-om-ultralydsensorer>Litt om ultralydsensorer</h1> <p>En ultralydsensor fungerer som mange andre ting som bruker ultralyd, f.eks. ekkolodd og medisinske ultralydmaskiner: De sender en lyd ut, og lytter etter hvor lang tid det tar før lyden kommer tilbake.</p> <p>Dette er et eksempel på hvordan vi kan bruke matematikk og vår kjennskap til fysikk til å beregne nyttige verdier. Hvis vi ser på denne animasjonen kan vi se hva som skjer når ultralydsensoren sender et signal og får det tilbake.</p> <figure><img src="+n(3219)+" alt=Ekko-animasjon></figure> <p>Som du ser går lyden ut av sensoren i lydens hastighet, reiser bort til det treffer en gjenstand, og kommer tilbake i lydens hastighet. I naturfag har vi lært at lydens hastighet er ca. 340.29 m/s. Det gjør at vi kan beregne hvor langt lyden har reist ved å måle tiden det tar før lyden kommer tilbake. Dette bildet viser et praktisk eksempel:</p> <figure><img src="+n(3218)+" alt=Ekko-eksempel></figure> <p>Her reiser lyden frem, treffer noe, og kommer tilbake. Hvis vi her måler tiden fra lyden sendes til den kommer tilbake, vil vi se at det tar ca. 0,0059 sekunder. Vi kan bruke dette tallet til å regne ut hvor langt det har reist: <code>0,0059 s * 340 m/s = 2.001 m</code>. Lyden har altså reist 2 meter. Det vil si at nærmeste gjenstand er <code>2.001 m / 2 = 1.0005 m</code> meter unna. Hvis sensoren peker på noe stort og flatt vil du se at den kan være veldig presis!</p> </section> <section class=activity id=steg-1-finn-frem-utstyr> <h1 class=activity id=steg-1-finn-frem-utstyr>Steg 1: Finn frem utstyr</h1> <section class=check id=til-denne-oppgaven-trenger-du> <h2 class=check id=til-denne-oppgaven-trenger-du>Til denne oppgaven trenger du</h2> <ul class=task-list> <li class=task-list-item><input type=checkbox id=cbx_0><label for=cbx_0> 1 Arduino Uno</label></li> <li class=task-list-item><input type=checkbox id=cbx_1><label for=cbx_1> 1 breadboard</label></li> <li class=task-list-item><input type=checkbox id=cbx_2><label for=cbx_2> 1 ultralydsensor</label></li> <li class=task-list-item><input type=checkbox id=cbx_3><label for=cbx_3> 6 ledninger</label></li> </ul> <figure><img src="+n(3222)+' alt=utstyr></figure> </section> </section> <section class=activity id=steg-2-koble-opp-kretsen> <h1 class=activity id=steg-2-koble-opp-kretsen>Steg 2: Koble opp kretsen</h1> <p>Hvis du ser på pinnene på ultralydsensoren vil du se at over de står det <code>Gnd</code>, <code>Echo</code>, <code>Trig</code> og <code>Vcc</code>.</p> <p><code>Gnd</code> er jord, <code>Vcc</code> er 5V strøm, <code>Echo</code> og <code>Trig</code> er digitale pinner.</p> <p>Koble opp kretsen. Snakk med veileder hvis du står fast og trenger hjelp, men gjør et forsøk selv først.</p> <section class=activity id=skriv-kode> <h2 class=activity id=skriv-kode>Skriv kode</h2> <pre><code class=cpp><span class=hljs-keyword>const</span> <span class=hljs-keyword>auto</span> ekko = <span class=hljs-number>2</span>; <span class=hljs-comment>// Echo pin</span>\n<span class=hljs-keyword>const</span> <span class=hljs-keyword>auto</span> sender = <span class=hljs-number>3</span>; <span class=hljs-comment>// Trig pin</span>\n<span class=hljs-keyword>const</span> <span class=hljs-keyword>auto</span> lydens_hastighet = <span class=hljs-number>0.034029</span>; <span class=hljs-comment>// 340.29 m/s</span>\n\n<span class=hljs-function><span class=hljs-keyword>void</span> <span class=hljs-title>setup</span><span class=hljs-params>()</span> </span>{\n  Serial.begin(<span class=hljs-number>9600</span>);\n  pinMode(ekko, INPUT);\n  pinMode(sender, OUTPUT);\n\n  digitalWrite(sender, LOW);\n}\n\n<span class=hljs-function><span class=hljs-keyword>void</span> <span class=hljs-title>loop</span><span class=hljs-params>()</span> </span>{\n  digitalWrite(sender, HIGH);\n  delayMicroseconds(<span class=hljs-number>10</span>);\n  digitalWrite(sender, LOW);\n\n  <span class=hljs-keyword>auto</span> tid = pulseIn(ekko);\n  <span class=hljs-keyword>auto</span> avstand = (tid * lydens_hastighet) / <span class=hljs-number>2</span>;\n\n  Serial.print(<span class=hljs-string>"Avstand til gjenstand er "</span>);\n  Serial.print(avstand);\n  Serial.print(<span class=hljs-string>" cm. Lydsignalet brukte "</span>);\n  Serial.print(tid);\n  Serial.println(<span class=hljs-string>" mikrosekunder totalt"</span>);\n\n  delay(<span class=hljs-number>100</span>);\n}\n</code></pre> <p>Denne koden gjør akkurat det vi skrev om i introduksjonen. Den sender et lite lydsignal (ved å skrive en liten puls til <code>sender</code>-pinnen) og venter på at lydsignalet kommer tilbake (ved å kalle <code>pulseIn</code> på <code>ekko</code>-pinnen. Den kan da gjøre akkurat det samme regnestykket som vi gjorde der, gange <code>tid</code> med <code>hastighet</code> og dele på <code>2</code>.</p> <p>Fordi <code>pulseIn</code> gir oss tiden i mikrosekunder (µs), som er en milliontedels sekund, må vi dele på en 1.000.000, og fordi vi vil ha lengen i cm heller enn i meter må vi gange med 100. For å slippe å gjøre dette hver gang har vi allerede gjort det med variabelen <code>lydens_hastighet</code>. (340,29 m/s * 100 cm/m / 1.000.000 µs/s = 0,034029 cm/µs.)</p> </section> <section class=protip id=seriellkonsoll> <h2 class=protip id=seriellkonsoll>Seriellkonsoll</h2> <p>For å kunne lese hva vi skriver ut må du se på det som kalles et seriellkonsoll. <code>Serial.print</code> og <code>Serial.println</code> får arduinoen til å skrive til sin seriellkonsoll, som kan leses fra en pc koblet til arduinoen med USB ledning. <code>print</code> skriver ut tekst eller tall. <code>println</code> gjør akkurat det samme, og legger så til en linjeskift slik at neste <code>print</code> eller <code>println</code> havner på en ny linje.</p> <p>For å åpne seriellkonsollet går du til <strong>Tools -&gt; Serial Monitor</strong></p> <figure><img src='+n(3220)+" alt=Serieport></figure> </section> <section class=challenge id=utfordring> <h2 class=challenge id=utfordring>Utfordring</h2> <ul class=task-list> <li class=task-list-item><input type=checkbox id=cbx_4><label for=cbx_4> Klarer du å få en lysdiode til å lyse når noe er nærmere enn 20 cm?</label></li> <li class=task-list-item><input type=checkbox id=cbx_5><label for=cbx_5> klarer du å få en lysdiode til å lyse sterkere jo nærmere noe er (husk <code>PWM</code>-pinner)?</label></li> </ul> </section> <section class=challenge id=utfordring-vanskelig> <h2 class=challenge id=utfordring-vanskelig>Utfordring (Vanskelig)</h2> <ul class=task-list> <li class=task-list-item><input type=checkbox id=cbx_6><label for=cbx_6> Klarer du å få et 7-Segment Display til å si hvor nærme du er på en skala fra 0-9 (husk <code>map</code>-funksjonen og oppgaven <a href=../7_segment_display/7_segment_display.html>7-Segment Display</a>)?</label></li> </ul> </section> </section> "},3218:function(e,s,n){e.exports=n.p+"_/oppgaver/src/arduino/ultralydsensor/ekko-eksempel.2cd711.png"},3219:function(e,s,n){e.exports=n.p+"_/oppgaver/src/arduino/ultralydsensor/ekko.c801d7.gif"},3220:function(e,s,n){e.exports=n.p+"_/oppgaver/src/arduino/ultralydsensor/serial.9ecdc8.png"},3222:function(e,s,n){e.exports=n.p+"_/oppgaver/src/arduino/ultralydsensor/utstyr.a8262a.jpeg"}});