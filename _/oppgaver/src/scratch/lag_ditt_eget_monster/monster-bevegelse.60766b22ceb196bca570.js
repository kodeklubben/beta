webpackJsonp([204,429],{1624:function(e,t,n){e.exports={frontmatter:n(625),content:n(2815)}},2815:function(e,t){e.exports="<section class=check id=sjekkliste> <h2 class=check id=sjekkliste>Sjekkliste</h2> <ul class=task-list> <li class=task-list-item> <p><input type=checkbox id=cbx_0><label for=cbx_0> Etterhvert vil monsteret ditt bestå av en mengde figurer og det vil bli nødvendig å sørge for at alle figurene flyttes sammen. I stedet for å legge til flyttkommandoer på alle figurer, kan du rett og slett legge til kontroller på kroppsfiguren og bruke en <code class=blockevents>send melding</code> for å kontrollere andre figurer. Når vår tentakkelfigur (eller en hvilken som helst annen figur!) mottar en <code>flyttet høyre</code>-melding, kan vi flytte den også til høyre.</label></p> <pre class=blocks>// på spøkelseskroppen\nnår [pil høyre v] trykkes\nendre x med (hastighet)\nsend melding [flyttet høyre v]\n\nnår [pil venstre v] trykkes\nendre x med ((hastighet) * (-1))\nsend melding [flyttet venstre v]\n\n// på tentakkelen\nnår jeg mottar [flyttet høyre v]\nendre x med (hastighet)\n\nnår jeg mottar [flyttet venstre v]\nendre x med ((hastighet) * (-1))\n</pre> </li> <li class=task-list-item> <p><input type=checkbox id=cbx_1><label for=cbx_1> Ved å bruke en <code class=blockevents>send melding</code> kan vi også endre hvordan bevegelseskommandoen virker, ved å bare endre et skript. <strong>Ta en titt på dette eksempelet:</strong></label></p> <pre class=blocks>// på spøkelseskroppen\nnår [pil høyre v] trykkes\nendre x med (hastighet)\npek i retning (90 v)\nsprett tilbake ved kanten\nhvis &lt;ikke &lt;berører [kant v]?&gt;&gt;\n    send melding [flyttet høyre v]\n    send melding [flyttet v]\nslutt\n\nnår [pil venstre v] trykkes\nendre x med ((hastiget) * (-1))\npek i retning (-90 v)\nsprett tilbake ved kanten\nhvis &lt;ikke &lt;berører [kant v]?&gt;&gt;\n    send melding [flyttet venstre v]\n    send melding [flyttet v]\nslutt\n</pre> </li> <li class=task-list-item> <p><input type=checkbox id=cbx_2><label for=cbx_2> Her forteller vi at kroppen skal gå i den retningen den beveger seg i (husk å sette figur orienteringen til <strong>“venstre-høyre”</strong>) og for å stoppe og at den snur hvis den kolliderer med skjermkanten. Kanskje har du også lagt merke til at vi har lagt meldingen i en <code class=blockcontrol>hvis</code>-kloss, vi vil bare at de andre kroppsdelene skal bevege seg hvis kroppen ikke er i kanten av skjermen. <strong>Hvis du bestemmer deg for å legge til animasjon på bevegelsen, må du huske på at tilhørende bevegelser vil ta like lang tid. f. eks hvis å bevege et bein til venstre tar 1 sekund, må alle andre venstrebevegelser ta et sekund også (bruk en <code class=blockcontrol>vent</code>-kloss for å sørge at de er i samme steg).</strong></label></p> </li> <li class=task-list-item> <p><input type=checkbox id=cbx_3><label for=cbx_3> Du kan også animere kroppsfiguren ved å bruke <code class=blocklooks>neste drakt</code>, som kan aktiveres hver gang en bevegelsesmelding mottas.</label></p> <pre class=blocks>når jeg mottar [flyttet høyre v]\nneste drakt\n</pre> </li> </ul> </section> "}});