webpackJsonp([162,423],{1685:function(s,a,e){s.exports={frontmatter:e(702),content:e(2864)}},2864:function(s,a){s.exports='<section class=intro id=introduction> <h1 class=intro id=introduction>Introduction</h1> <p>I denne oppgaven skal vi bruke JavaScript til å få figurer vi å bevege seg. Vi skal altså lære å animere ved hjelp av JavaScript og noe som heter <code>Canvas</code>. Under ser du animasjonen vi kommer til å lage.</p> <p>Denne oppgaven er den første i en liten serie av andre <code>partikkel</code>-oppgaver, derfor er det viktig å forstå det som skjer i denne oppgaven.</p> <p><canvas id=canvas width=300 height=300></canvas></p> <script>function draw(){ctx.clearRect(0,0,300,300),ctx.fillStyle="red",ctx.fillRect(particle.x,particle.y,particle.size,particle.size),particle.x=particle.x+particle.xSpeed,particle.y=particle.y+particle.ySpeed,300===particle.x&&300===particle.y&&(particle.x=0,particle.y=0)}var canvas,ctx,particle={x:0,y:0,xSpeed:2,ySpeed:2,size:10};window.onload=function(){canvas=document.getElementById("canvas"),ctx=canvas.getContext("2d"),setInterval(draw,30)}</script> <p>I denne oppgaven vil du få bruk for det du har lært i oppgaven <a href=../grunnleggende_js/grunnleggende_js.html>Grunnleggende JavaScript</a>.</p> </section> <section class=activity id=steg-1-canvas-elementet> <h1 class=activity id=steg-1-canvas-elementet>Steg 1: Canvas-elementet</h1> <p>I HTML bruker vi <code>&lt;canvas&gt;</code> til å tegne figurer ved hjelp av JavaScript. Selve <code>&lt;canvas&gt;</code>-elementet gjør ikke så stor nytte for seg, så derfor bruker vi JavaScript til å fortelle hva slags grafikk <code>&lt;canvas&gt;</code>-elementet skal inneholde. La oss skrive det som trengs for å jobbe med <code>canvas</code>:</p> <ul class=task-list> <li class=task-list-item><input type=checkbox id=cbx_0><label for=cbx_0> Åpne favoritt teksteditoren din</label></li> <li class=task-list-item><input type=checkbox id=cbx_1><label for=cbx_1> Lag en ny HTML-fil som heter <code>partikler.html</code></label></li> <li class=task-list-item><input type=checkbox id=cbx_2><label for=cbx_2> Kopier koden under inn i <code>partikler.html</code>:</label></li> </ul> <pre><code class=html><span class=hljs-tag>&lt;<span class=hljs-name>html</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>head</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>meta</span> <span class=hljs-attr>charset</span>=<span class=hljs-string>"UTF-8"</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>title</span>&gt;</span>Partikkel-fest<span class=hljs-tag>&lt;/<span class=hljs-name>title</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>style</span>&gt;</span><span class=css>\n        <span class=hljs-selector-tag>body</span> {\n            <span class=hljs-attribute>background-color</span>:<span class=hljs-number>#666</span>;\n        }\n\n        <span class=hljs-selector-id>#canvas</span> {\n            <span class=hljs-attribute>background-color</span>:<span class=hljs-number>#000</span>;\n            <span class=hljs-attribute>margin-left</span>:<span class=hljs-number>100px</span>;\n        }\n    </span><span class=hljs-tag>&lt;/<span class=hljs-name>style</span>&gt;</span>\n\n<span class=hljs-tag>&lt;/<span class=hljs-name>head</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>body</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>canvas</span> <span class=hljs-attr>id</span>=<span class=hljs-string>"canvas"</span> <span class=hljs-attr>width</span>=<span class=hljs-string>"500"</span> <span class=hljs-attr>height</span>=<span class=hljs-string>"500"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>canvas</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>body</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>html</span>&gt;</span>\n\n</code></pre> <section class=tip id=forklaring-canvas> <h2 class=tip id=forklaring-canvas>Forklaring: Canvas</h2> <ul> <li><code>&lt;canvas id=&quot;canvas&quot; width=&quot;500&quot; height=&quot;500&quot;&gt;&lt;/canvas&gt;</code> er selve <code>Canvas</code>-elementet. Den har en gitt høyde og bredde <code>500px x 500px</code>. Vi skal bruke JavaScript til å lage andre elementer inne i <code>canvas</code>-elementet.</li> <li>I CSSen er det lagt til en <code>grå</code> bakgrunnsfarge til <code>&lt;body&gt;</code> og sort bakgrunnsfarge til <code>&lt;canvas&gt;</code>.</li> </ul> </section> <section id=""> <h2 id=""></h2> </section> </section> <section class=activity id=steg-2-tegn-et-objekt> <h1 class=activity id=steg-2-tegn-et-objekt>Steg 2: Tegn et objekt</h1> <p>Nå som vi vet hvordan <code>canvas</code> ser ut er det på tide å prøve det ut:</p> <ul class=task-list> <li class=task-list-item> <p><input type=checkbox id=cbx_3><label for=cbx_3> Sett inn <code>&lt;script&gt; &lt;/script&gt;</code> i koden din</label></p> </li> <li class=task-list-item> <p><input type=checkbox id=cbx_4><label for=cbx_4> Lag to tomme variabeler:</label></p> </li> </ul> <pre><code class=js><span class=hljs-keyword>var</span> canvas;\n<span class=hljs-keyword>var</span> ctx;\n</code></pre> <ul class=task-list> <li class=task-list-item><input type=checkbox id=cbx_5><label for=cbx_5> Vi skal nå fylle disse variablene når siden vår lastes, da bruker vi noe som heter <code>window.onload</code>:</label></li> </ul> <pre><code class=js><span class=hljs-built_in>window</span>.onload = <span class=hljs-function><span class=hljs-keyword>function</span>(<span class=hljs-params></span>) </span>{\n    canvas = <span class=hljs-built_in>document</span>.getElementById(<span class=hljs-string>"canvas"</span>);\n    ctx = canvas.getContext(<span class=hljs-string>"2d"</span>);\n}\n</code></pre> <p><code>canvas</code>-variabelen holder nå på HTML-elementet vårt.</p> <p><code>ctx</code>-variabelen vil være det grafiske elementet som blir lagt til i <code>canvas</code>, dette elementet kan vi manipulere ved hjelp av stil, som vi skal se på snart.</p> <p>For å kunne lage grafikk i <code>canvas</code> er de to linjene over påkrevd, så nå som vi har det på plass kan vi starte å tegne!</p> <ul class=task-list> <li class=task-list-item><input type=checkbox id=cbx_6><label for=cbx_6> Nå skal vi lage objekter, så la oss lære litt om hva et <code>objekt</code> er:</label></li> </ul> <section class=tip id=forklaring-objekt> <h2 class=tip id=forklaring-objekt>Forklaring: Objekt</h2> <p>La oss nå lage et <code>objekt</code> som skal tegnes. I JavaScript er et objekt en variabel som kan holde på flere verdier eller variabler, som vi ofte kaller for <code>attributter</code>. La oss se på et raskt eksempel med en bil:</p> <pre><code class=js><span class=hljs-keyword>var</span> bil = {\n    <span class=hljs-attr>navn</span>: <span class=hljs-string>"Volkswagen"</span>,\n    <span class=hljs-attr>modell</span>: <span class=hljs-string>"Golf"</span>\n    antallSeter: <span class=hljs-number>5</span>,\n    <span class=hljs-attr>farge</span>: <span class=hljs-string>"Blå"</span>,\n};\n</code></pre> <p>Vi kan enkelt hente ut informasjonen vi vil ha fra objektet ved å skive følgende:</p> <pre><code class=js><span class=hljs-built_in>console</span>.log(bil.navn); <span class=hljs-comment>// Skriver ut navnet på bilen: Volkswagen</span>\n<span class=hljs-built_in>console</span>.log(bil.farge); <span class=hljs-comment>// Skriver ut fargen på bilen: Blå</span>\n</code></pre> <p>For å endre på ett av attributtene gjør vi bare følgende:</p> <pre><code class=js>bil.farge = <span class=hljs-string>"Rød"</span>;\n</code></pre> <p>Nå vil attributtet <code>farge</code> bli endret fra <code>Blå</code> til <code>Rød</code>.</p> <p>På denne måten slipper vi å lage mange variabler, som skal høre til samme element, vi bruker bare <code>objekter</code>.</p> </section> <section id=-2> <h2 id=-2></h2> <ul class=task-list> <li class=task-list-item> <p><input type=checkbox id=cbx_7><label for=cbx_7> Lag et objekt som heter <code>particle</code> og som inneholder følgende attributter: <code>x</code>-posisjon, <code>y</code>-posisjon, <code>størrelse</code> og <code>farge</code></label></p> </li> <li class=task-list-item> <p><input type=checkbox id=cbx_8><label for=cbx_8> Bestem selv en passende verdi for attributtene. Disse kan være lurt å eksperimentere litt med senere i oppgaven.</label></p> </li> </ul> <toggle> <strong> Hint </strong> <hide> Setter du x og y til 0, så vil den starte oppe i venstre hjørne. Høyden og bredden er piksel-verdier (px). </hide> </toggle> <ul class=task-list> <li class=task-list-item> <p><input type=checkbox id=cbx_9><label for=cbx_9> Lag en funksjon som heter <code>draw</code>. Denne skal tegne elementet for oss.</label></p> </li> <li class=task-list-item> <p><input type=checkbox id=cbx_10><label for=cbx_10> I <code>draw</code> skal vi nå legge til hvilke farge vi vil at elementet vårt skal ha, du bestemmer selv hvilken farge:</label></p> </li> </ul> <pre><code class=js>ctx.fillStyle = particle.farge;\n</code></pre> <ul class=task-list> <li class=task-list-item><input type=checkbox id=cbx_11><label for=cbx_11> Nå skal vi tegne et kvadrat (firkant hvor alle sidene er like lange) i fargen vi valgte over:</label></li> </ul> <pre><code class=js>ctx.fillRect(particle.x,particle.y,particle.size,particle.size);\n</code></pre> </section> <section class=tip id=forklaring-ctxfillrect> <h2 class=tip id=forklaring-ctxfillrect>Forklaring: ctx.fillRect()</h2> <p><code>ctx.fillRect()</code> tar inn 4 variabler:</p> <pre><code class=js>ctx.fillRect(x-posisjon, y-posisjon, bredde, høyde);\n</code></pre> <p>Over brukte vi de attributtene vi lagde i objektet <code>particle</code>.</p> <p>I vårt objekt <code>particle</code> har vi satt en <code>x</code>- og <code>y</code>-posisjon, samt en størrelse som vi setter på både <code>bredde</code> og <code>høyde</code> for å få et kvadrat.</p> </section> <section id=-3> <h2 id=-3></h2> <ul class=task-list> <li class=task-list-item><input type=checkbox id=cbx_12><label for=cbx_12> Lagre og kjør funksjonen <code>draw()</code> når siden lastes.</label></li> </ul> <p>Forslag til koden så langt:</p> <pre><code class=html>CTYPE html&gt;\n<span class=hljs-tag>&lt;<span class=hljs-name>html</span> <span class=hljs-attr>lang</span>=<span class=hljs-string>"en"</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>head</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>meta</span> <span class=hljs-attr>charset</span>=<span class=hljs-string>"UTF-8"</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>title</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>title</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>style</span>&gt;</span><span class=css>\n        <span class=hljs-selector-tag>body</span> {\n            <span class=hljs-attribute>background-color</span>: <span class=hljs-number>#666</span>;\n        }\n\n        <span class=hljs-selector-id>#canvas</span> {\n            <span class=hljs-attribute>background-color</span>: <span class=hljs-number>#000</span>;\n            <span class=hljs-attribute>margin-left</span>: <span class=hljs-number>100px</span>;\n        }\n    </span><span class=hljs-tag>&lt;/<span class=hljs-name>style</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=javascript>\n\n        <span class=hljs-keyword>var</span> canvas;\n        <span class=hljs-keyword>var</span> ctx;\n\n        <span class=hljs-keyword>var</span> particle = {\n            <span class=hljs-attr>x</span>: <span class=hljs-number>0</span>,\n            <span class=hljs-attr>y</span>: <span class=hljs-number>0</span>,\n            <span class=hljs-attr>size</span>: <span class=hljs-number>10</span>,\n            <span class=hljs-attr>farge</span>: <span class=hljs-string>"red"</span>\n        };\n\n        <span class=hljs-built_in>window</span>.onload = <span class=hljs-function><span class=hljs-keyword>function</span>(<span class=hljs-params></span>) </span>{\n            canvas = <span class=hljs-built_in>document</span>.getElementById(<span class=hljs-string>"canvas"</span>);\n            ctx = canvas.getContext(<span class=hljs-string>"2d"</span>);\n            draw();\n        };\n\n\n        <span class=hljs-comment>//Tegner particle</span>\n        <span class=hljs-function><span class=hljs-keyword>function</span> <span class=hljs-title>draw</span>(<span class=hljs-params></span>) </span>{\n            ctx.fillStyle = particle.farge;\n            ctx.fillRect(particle.x, particle.y,particle.size,particle.size);\n        };\n\n    </span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n<span class=hljs-tag>&lt;/<span class=hljs-name>head</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>body</span>&gt;</span>\n\n<span class=hljs-tag>&lt;<span class=hljs-name>canvas</span> <span class=hljs-attr>id</span>=<span class=hljs-string>"canvas"</span> <span class=hljs-attr>width</span>=<span class=hljs-string>"500"</span> <span class=hljs-attr>height</span>=<span class=hljs-string>"500"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>canvas</span>&gt;</span>\n\n<span class=hljs-tag>&lt;/<span class=hljs-name>body</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>html</span>&gt;</span>\n\n</code></pre> </section> </section> <section class=activity id=steg-3-flytt-pa-partikkelet> <h1 class=activity id=steg-3-flytt-pa-partikkelet>Steg 3: Flytt på partikkelet</h1> <p>Nå som vi har fått frem en rød firkant, som er partikkelet vårt, så skal vi nå se hvordan vi kan få den til å flytte på seg. For å få dette til å skje må vi legge til noen nye attributter i objektet vårt, og endre disse underveis i funksjonen vår. For å gjøre dette må vi lære å bruke <code>setInterval</code>, men først må vi endre på objektet vårt.</p> <ul class=task-list> <li class=task-list-item><input type=checkbox id=cbx_13><label for=cbx_13> I objektet <code>particle</code>, legg til attributtene <code>xSpeed</code> og <code>ySpeed</code></label></li> <li class=task-list-item><input type=checkbox id=cbx_14><label for=cbx_14> Sett verdiene til <code>xSpeed</code> og <code>ySpeed</code> til å være <code>2</code> foreløpig</label></li> </ul> <p>I <code>draw</code> må vi nå endre <code>particle</code> sin <code>x</code>-posisjon med <code>xSpeed</code>, samme må vi gjøre med <code>y</code>-posisjonen. Måten man øker et attributt på er slik:</p> <pre><code class=js>objekt.attributt1 = objekt.attributt1 + objekt.attributt2;\n</code></pre> <ul class=task-list> <li class=task-list-item><input type=checkbox id=cbx_15><label for=cbx_15> Legg til det som trengs i <code>draw</code> for å få <code>particle</code> til å endre <code>x</code>- og <code>y</code>-posisjonen sin</label></li> </ul> <toggle> <strong> Hint </strong> <hide> particle.x = particle.x + particle.xSpeed; </hide> </toggle> <p>For at vi skal få en animasjon så må vi kjører <code>draw</code> flere ganger enn bare 1, derfor må vi bruke <code>setInterval</code> for å gjenta <code>draw</code>.</p> <ul class=task-list> <li class=task-list-item><input type=checkbox id=cbx_16><label for=cbx_16> Kjør funksjonen draw hvert 30 millisekund:</label></li> </ul> <pre><code class=js>setInterval(draw, <span class=hljs-number>30</span>);\n</code></pre> <section class=tip id=forklaring-setinterval> <h2 class=tip id=forklaring-setinterval>Forklaring: setInterval</h2> <ul> <li><code>setInterval</code> kjører en funksjon hvert X millisekund.</li> <li>Altså betyr <code>setInterval(draw, 30);</code> at funksjonen <code>draw()</code> kjøres hvert 30 millisekund. NB! 1000 millisekunder er ett sekund.</li> </ul> </section> <section id=-4> <h2 id=-4></h2> <ul class=task-list> <li class=task-list-item><input type=checkbox id=cbx_17><label for=cbx_17> Fjern <code>draw()</code>, vi trenger ikke den lenger, ettersom <code>setInterval</code> vil kjøre <code>draw</code> for oss.</label></li> <li class=task-list-item><input type=checkbox id=cbx_18><label for=cbx_18> Lagre og kjør siden vi har laget til nå!</label></li> </ul> <p>Som du ser så lager den en lang diagonal stripe. Som du kanskje har skjønt må vi finne en måte vi kan fjerne den forrige vi tegnet slik at vi skaper en illusjon om at den flytter på seg og ikke bare lager mange etter hverandre.</p> <ul class=task-list> <li class=task-list-item> <p><input type=checkbox id=cbx_19><label for=cbx_19> I starten av <code>draw</code> må vi bruke <code>ctx.clearRect(0,0,500,500);</code> for å fjerne alt som er innenfor det svarte. Altså fra (<code>x</code>,<code>y</code>)-posisjonen (0,0) og helt til (500,500).</label></p> </li> <li class=task-list-item> <p><input type=checkbox id=cbx_20><label for=cbx_20> Lagre og kjør på nytt!</label></p> </li> </ul> <p><strong>Gratulere du har laget din første animasjon i JavaScript!</strong></p> </section> <section class=challenge id=utfordring> <h2 class=challenge id=utfordring>Utfordring</h2> <ul class=task-list> <li class=task-list-item><input type=checkbox id=cbx_21><label for=cbx_21> Prøve å få partikkelet til å gå rett frem</label></li> <li class=task-list-item><input type=checkbox id=cbx_22><label for=cbx_22> Få partikkelet til å gå rett ned</label></li> <li class=task-list-item><input type=checkbox id=cbx_23><label for=cbx_23> Få partikkelet til å gå baklengs v Får du til at partikkelet bytter til en tilfeldig farge hver gang den bytter posisjon?</label></li> </ul> </section> <section id=-5> <h2 id=-5></h2> <p>Ekssempel på ferdig kode til oppgaven:</p> <pre><code class=js>&lt;!DOCTYPE html&gt;\n<span class=xml><span class=hljs-tag>&lt;<span class=hljs-name>html</span> <span class=hljs-attr>lang</span>=<span class=hljs-string>"en"</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>head</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>meta</span> <span class=hljs-attr>charset</span>=<span class=hljs-string>"UTF-8"</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>title</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>title</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>style</span>&gt;</span><span class=css>\n        <span class=hljs-selector-tag>body</span> {\n            <span class=hljs-attribute>background-color</span>:<span class=hljs-number>#666</span>;\n        }\n\n        <span class=hljs-selector-id>#canvas</span> {\n            <span class=hljs-attribute>background-color</span>:<span class=hljs-number>#000</span>;\n            <span class=hljs-attribute>margin-left</span>:<span class=hljs-number>100px</span>;\n        }\n    </span><span class=hljs-tag>&lt;/<span class=hljs-name>style</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=javascript>\n\n        <span class=hljs-keyword>var</span> canvas, ctx;\n\n\n        <span class=hljs-keyword>var</span> particle = {\n            <span class=hljs-attr>x</span>: <span class=hljs-number>0</span>,\n            <span class=hljs-attr>y</span>: <span class=hljs-number>0</span>,\n            <span class=hljs-attr>xSpeed</span>: <span class=hljs-number>2</span>,\n            <span class=hljs-attr>ySpeed</span>: <span class=hljs-number>2</span>,\n            <span class=hljs-attr>size</span>: <span class=hljs-number>10</span>,\n            <span class=hljs-attr>farge</span>: <span class=hljs-string>"red"</span>\n        };\n\n        <span class=hljs-built_in>window</span>.onload = <span class=hljs-function><span class=hljs-keyword>function</span>(<span class=hljs-params></span>) </span>{\n            canvas = <span class=hljs-built_in>document</span>.getElementById(<span class=hljs-string>"canvas"</span>);\n            ctx = canvas.getContext(<span class=hljs-string>"2d"</span>);\n            setInterval(draw, <span class=hljs-number>30</span>);\n        };\n\n\n        <span class=hljs-comment>//Tegner og skyter particle opp</span>\n        <span class=hljs-function><span class=hljs-keyword>function</span> <span class=hljs-title>draw</span>(<span class=hljs-params></span>) </span>{\n\n            ctx.clearRect(<span class=hljs-number>0</span>,<span class=hljs-number>0</span>,<span class=hljs-number>500</span>,<span class=hljs-number>500</span>);\n\n            ctx.fillStyle = particle.farge;\n            ctx.fillRect(particle.x, particle.y,particle.size,particle.size);\n\n            particle.x = particle.x + particle.xSpeed;\n            particle.y = particle.y + particle.ySpeed;\n\n        }\n\n\n\n    </span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n<span class=hljs-tag>&lt;/<span class=hljs-name>head</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>body</span>&gt;</span>\n\n<span class=hljs-tag>&lt;<span class=hljs-name>canvas</span> <span class=hljs-attr>id</span>=<span class=hljs-string>"canvas"</span> <span class=hljs-attr>width</span>=<span class=hljs-string>"500"</span> <span class=hljs-attr>height</span>=<span class=hljs-string>"500"</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>canvas</span>&gt;</span>\n\n<span class=hljs-tag>&lt;/<span class=hljs-name>body</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>html</span>&gt;</span>\n</span></code></pre> </section> </section> '}});