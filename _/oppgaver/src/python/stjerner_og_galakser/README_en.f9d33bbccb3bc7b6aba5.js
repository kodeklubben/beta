webpackJsonp([238,428],{1534:function(e,i,t){e.exports={frontmatter:t(541),content:t(2717)}},2717:function(e,i){e.exports="<section id=introduction> <h1 id=introduction>Introduction:</h1> <p>This project teaches functions and parameter passing, by creating and using functions to draw customisable shapes and patterns.</p> </section> <section id=resources> <h1 id=resources>Resources</h1> <p>For this project, Python will need to be installed. It is recommended that version 3.2 of Python is installed.</p> <p>Children can also make use of the materials which accompany these challenges. Files included in the 'Project Resources' folder (found under the 'Download Project Materials' link):</p> <ul> <li><a href=http://Sky.py>Sky.py</a></li> </ul> <p>Make sure that each child has read and write access to their own copy of these resources.</p> <p>You can find a completed version of this project's challenges by clicking the 'Download Project Materials' link for this project, which contains:</p> <ul> <li><a href=http://ConstellationFinished.py>ConstellationFinished.py</a></li> <li><a href=http://Clouds.py>Clouds.py</a></li> </ul> </section> <section id=learning-objectives> <h1 id=learning-objectives>Learning Objectives</h1> <ul> <li>Functions and the <code>def</code> keyword;</li> <li>Passing parameters to functions;</li> <li>Additional turtle functions.</li> </ul> </section> <section id=challenges> <h1 id=challenges>Challenges</h1> <ul> <li>More functions - defining and calling functions;</li> <li>Drawing planets - defining and calling parameterised functions;</li> <li>Functions everywhere! - using functions to draw images.</li> </ul> </section> <section id=frequently-asked-questions> <h1 id=frequently-asked-questions>Frequently Asked Questions</h1> <ul> <li>Depending on where the file is saved, naming a program '<a href=http://turtle.py>turtle.py</a>' can cuase problems, as it clashes with the turtle module, which is also called '<a href=http://turtle.py>turtle.py</a>'.</li> <li>There can sometimes be problems when trying to close the turtle drawing canvas. The line <code>done()</code> at the end of each program should help, but if the window freezes you can close the shell window, which should terminate the program.</li> </ul> </section> "}});