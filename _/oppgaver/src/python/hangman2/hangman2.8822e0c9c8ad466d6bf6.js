webpackJsonp([64,429],{1514:function(e,t,s){e.exports={frontmatter:s(515),content:s(2702)}},2702:function(e,t,s){e.exports="<section class=intro id=introduksjon> <h1 class=intro id=introduksjon>Introduksjon</h1> <p>I denne oppgaven skal vi lage vårt eget hangman-spill. Vi har laget litt ferdigskrevet kode for å hjelpe deg på vei. Den kan du <a href=./hangman.py>laste ned her</a>. Lagre den der du pleier å lagre Python-koden din.</p> <p>Det kan se ut som mye kode, men det bare den øverste delen du skal endre på. Et lite stykke ned vil det være en overskrift som ser slik ut:</p> <pre><code class=python><span class=hljs-comment>###############################################################################</span>\n<span class=hljs-comment># Library code</span>\n<span class=hljs-comment>###############################################################################</span>\n</code></pre> <p>All koden under denne overskriften kan du bare overse. Dette er koden som hjelper deg med å tegne figurer og hente input fra brukeren.</p> <p>I koden over overskriften har vi laget noen variabler:</p> <ul> <li> <p><code>TRIES</code> som angir hvor mange forsøk brukeren har. Ettersom det bare er tegnet figurer for 7 feil, så er det lurt å la denne være slik den er.</p> </li> <li> <p><code>WORDS</code> er en liste over ord som kan gjettes, men ingen av disse ordene kan inneholde æ, ø eller å.</p> </li> <li> <p><code>state</code> er en ordbok som inneholder spillets tilstand.</p> </li> </ul> <p>Vi har begynt å lage fire funksjoner for deg. Disse skal du gi innhold i steg 1 til 4.</p> </section> <section class=activity id=steg-0-test-at-alt-fungerer> <h1 class=activity id=steg-0-test-at-alt-fungerer>Steg 0: Test at alt fungerer</h1> <p>Ved å kjøre kommandoen</p> <pre><code class=sh>pgzrun hangman.py\n</code></pre> <p>skal du få opp et vindu som ser slik ut:</p> <figure><img src="+s(3457)+" alt=\"\"></figure> </section> <section class=tip id=\"\"> <h1 class=tip id=\"\"></h1> <p>Dersom du ikke får opp et vindu som beskrevet over, pass på at du har installert Python på riktig måte, lastet ned <a href=./hangman.py>hangman.py</a> og er i samme mappe som fila.</p> <p>Dersom du fremdeles sitter fast bør du snakke med en veileder.</p> </section> <section class=activity id=steg-1-lage-det-hemmelige-ordet> <h1 class=activity id=steg-1-lage-det-hemmelige-ordet>Steg 1: Lage det hemmelige ordet</h1> <p>Nå skal vi skrive koden som skal kjøres når <code>create_display_string()</code> kalles. Denne funksjonen har to parametere - <code>secret_word</code> (det hemmelige ordet) og <code>remaining_letters</code> (en liste med de bokstavene brukeren ikke har gjettet).</p> <p>Her er et eksempel på hvordan funksjonen kan fungere:</p> <pre><code class=python><span class=hljs-meta>&gt;&gt;&gt; </span>remaining_letters =[<span class=hljs-string>'b'</span>, <span class=hljs-string>'c'</span>, <span class=hljs-string>'d'</span>, <span class=hljs-string>'e'</span>, <span class=hljs-string>'f'</span>, <span class=hljs-string>'g'</span>, <span class=hljs-string>'h'</span>, <span class=hljs-string>'i'</span>, <span class=hljs-string>'j'</span>, <span class=hljs-string>'k'</span>, <span class=hljs-string>'l'</span>,\n                        <span class=hljs-string>'m'</span>, <span class=hljs-string>'n'</span>, <span class=hljs-string>'o'</span>, <span class=hljs-string>'p'</span>, <span class=hljs-string>'q'</span>, <span class=hljs-string>'r'</span>, <span class=hljs-string>'s'</span>, <span class=hljs-string>'t'</span>, <span class=hljs-string>'u'</span>, <span class=hljs-string>'v'</span>, <span class=hljs-string>'w'</span>,\n                        <span class=hljs-string>'x'</span>, <span class=hljs-string>'y'</span>, <span class=hljs-string>'z'</span>] <span class=hljs-comment># alle bokstaver fra b til z</span>\n<span class=hljs-meta>&gt;&gt;&gt; </span>secret_word = <span class=hljs-string>'banan'</span>\n<span class=hljs-meta>&gt;&gt;&gt; </span>create_display_string(secret_word, remaining_letters)\n<span class=hljs-string>'_ a _ a _'</span>\n<span class=hljs-meta>&gt;&gt;&gt; </span>remaining_letters.remove(<span class=hljs-string>'b'</span>)\n<span class=hljs-meta>&gt;&gt;&gt; </span>create_display_string(secret_word, remaining_letters)\n<span class=hljs-string>'b a _ a _'</span>\n<span class=hljs-meta>&gt;&gt;&gt; </span>create_display_string(secret_word, [])\n<span class=hljs-string>'b a n a n'</span>\n</code></pre> <p>Her er alle bokstaver i <code>secret_word</code> som også er i <code>remaining_letters</code> erstatte med <code>_</code>. Vi har også lagt inn et mellomrom mellom hvert tegn.</p> <p>For å lage denne funksjonen trenger vi noen av tekstfunksjonene vi lærte i <a href=../tekst_abc/tekst_abc.html>Tekst ABC</a>. Dersom du ikke husker disse kan det være lurt å gå tilbake og lese igjennom alle de gule boksene i oppgaven.</p> <p>Du skal nå skrive kode i funksjonen. Dette må du gjøre:</p> <ul class=task-list> <li class=task-list-item> <p><input type=checkbox id=cbx_0><label for=cbx_0> For å konvertere <code>secret_word</code> til ei liste må du bruke funksjonen <code>list()</code>. Du kan gi en streng som argument til <code>list()</code>, også returneres en liste av bokstaver.</label></p> <pre><code class=python><span class=hljs-meta>&gt;&gt;&gt; </span>list(<span class=hljs-string>\"ord\"</span>)\n[<span class=hljs-string>'o'</span>, <span class=hljs-string>'r'</span>, <span class=hljs-string>'d'</span>]\n</code></pre> </li> <li class=task-list-item> <p><input type=checkbox id=cbx_1><label for=cbx_1> Slå sammen bokstavene til en streng igjen, med ett mellomrom mellom hver bokstav.</label></p> <p><strong>Hint:</strong> <code>s.join(lst)</code></p> </li> <li class=task-list-item> <p><input type=checkbox id=cbx_2><label for=cbx_2> Bytt ut hver bokstav som er i det nye ordet vårt og i <code>remaining_letters</code> med <code>_</code>, slik som i eksempelet over.</label></p> <p><strong>Hint:</strong> <code>s.replace()</code></p> </li> <li class=task-list-item> <p><input type=checkbox id=cbx_3><label for=cbx_3> Husk å returnere det hemmelige ordet.</label></p> </li> </ul> </section> <section class=activity id=steg-2-a-starte-spillet> <h1 class=activity id=steg-2-a-starte-spillet>Steg 2: Å starte spillet</h1> <p>Nå skal vi kode funksjonen <code>start_game()</code>. Denne funksjonen lager nøkkel/verdi-parene i <code>state</code>. Dersom du ikke husker hvordan ordbøker fungerer kan det være lurt å repetere <a href=../ordboeker/ordboeker.html>oppgaven om ordbøker</a>.</p> <p>Nøklene i <code>state</code> er som følger:</p> <ul> <li><code>&quot;running&quot;</code> forteller hjelpefunksjonene om spillet kjører</li> <li><code>&quot;used_tries&quot;</code> er hvor mange forsøk brukeren har brukt</li> <li><code>&quot;secret_word&quot;</code> er det ordet brukeren skal gjette</li> <li><code>&quot;pressed_button&quot;</code> er den siste knappen som ble trykket av brukeren</li> <li><code>&quot;help_text&quot;</code> er hjelpetekst for brukeren, som forklarer hva brukeren skal gjøre</li> <li><code>&quot;remaining_letters&quot;</code> er en liste over de bokstavene brukeren ikke har gjettet</li> <li><code>&quot;display_string&quot;</code> er det ordet som vises til brukeren (etter at vi har satt inn <code>_</code>).</li> </ul> <p>Dette må du gjøre:</p> <ul class=task-list> <li class=task-list-item> <p><input type=checkbox id=cbx_4><label for=cbx_4> Lag følgende nøkkel/verdi-par:</label></p> <ul> <li>Nøkkel: <code>&quot;running&quot;</code> Verdi: <code>True</code></li> <li>Nøkkel: <code>&quot;used_tries&quot;</code> Verdi: <code>0</code></li> <li>Nøkkel: <code>&quot;pressed_button&quot;</code> Verdi: <code>&quot;&quot;</code> (En tom streng)</li> <li>Nøkkel: <code>&quot;help_text&quot;</code> Verdi: <code>&quot;Guess a letter!&quot;</code></li> </ul> </li> <li class=task-list-item> <p><input type=checkbox id=cbx_5><label for=cbx_5> For å velge et tilfeldig ord skal vi bruke <code>random.choice()</code>. Ved å gi denne funksjonen en liste som argument returneres et tilfeldig element i lista.</label></p> <ul class=task-list> <li class=task-list-item><input type=checkbox id=cbx_6><label for=cbx_6> Gi <code>WORDS</code> som argument og bruk det returnerte ordet som verdien som tilhører nøkkelen <code>&quot;secret_word&quot;</code>.</label></li> </ul> </li> <li class=task-list-item> <p><input type=checkbox id=cbx_7><label for=cbx_7> Vi skal nå lage lista over bokstaver som brukeren ikke har gjettet. For å gjøre dette bruker vi de 26 første bokstavene i <code>string.ascii_letters</code>, og legger disse til lista.</label></p> <ul class=task-list> <li class=task-list-item> <p><input type=checkbox id=cbx_8><label for=cbx_8> La den tilhørende verdien til <code>&quot;remaining_letters&quot;</code> være en tom liste.</label></p> </li> <li class=task-list-item> <p><input type=checkbox id=cbx_9><label for=cbx_9> Bruk <code>enumerate()</code> og gå igjennom de 26 første bokstavene i <code>string.ascii_letters</code>, og legg disse til <code>state[&quot;remaining_letters&quot;]</code>.</label></p> <p><strong>Hint:</strong> Bruk <code>lst.append(elm)</code></p> </li> </ul> </li> <li class=task-list-item> <p><input type=checkbox id=cbx_10><label for=cbx_10> For å lage verdien som hører til <code>&quot;display_string&quot;</code> må vi bruke funksjonen vi lagde i <a href=#steg-1-lage-det-hemmelige-ordet>steg 1</a>. Hvilke to argumenter skal vi gi til funksjonen?</label></p> </li> </ul> <section class=flag id=test-spillet-ditt> <h2 class=flag id=test-spillet-ditt>Test spillet ditt</h2> <p>Lagre endringene dine i <code>hangman.py</code>, og kjør spillet ditt:</p> <pre><code class=sh>pgzrun hangman.py\n</code></pre> <p>Du skal nå få opp et vindu som ser slik ut:</p> <figure><img src="+s(3458)+' alt=""></figure> </section> </section> <section class=activity id=steg-3-a-avslutte-spillet> <h1 class=activity id=steg-3-a-avslutte-spillet>Steg 3: Å avslutte spillet</h1> <p>I funksjonen <code>game_over()</code> skal vi endre <code>state</code> slik at både bruker og hjelpefunksjoner får beskjed om at spillet er over.</p> <p>Dette må du gjøre:</p> <ul class=task-list> <li class=task-list-item> <p><input type=checkbox id=cbx_11><label for=cbx_11> Endre <code>state[&quot;running&quot;]</code> til <code>False</code>.</label></p> </li> <li class=task-list-item> <p><input type=checkbox id=cbx_12><label for=cbx_12> Endre verdien til <code>state[&quot;display_string&quot;]</code> slik at brukeren kan se løsningen, selv om brukeren ikke har vunnet. Dette kan du gjøre ved hjelp av funksjonen fra <a href=#steg-1-lage-det-hemmelige-ordet>steg 1</a>.</label></p> <p><strong>Hint:</strong> Hva skal listen vi gir som argument inneholde når vi ønsker å vise alle bokstavene?</p> </li> </ul> </section> <section class=activity id=steg-4-main> <h1 class=activity id=steg-4-main>Steg 4: main()</h1> <p>I dette steget skal vi skrive hovedfunksjonaliteten til spillet. Vi skal skrive koden i <code>main()</code>, som kjøres hver gang spillet oppdateres. Her skal vi finne ut hvilken bokstav brukeren trykket på, og så sjekke om den bokstaven er inneholdt i ordet vårt. Vi må også oppdatere antall brukte forsøk, og til slutt sjekke om brukeren har brukt opp alle forsøkene sine eller om han har gjettet riktig ord.</p> <p>Dette må du gjøre:</p> <ul class=task-list> <li class=task-list-item> <p><input type=checkbox id=cbx_13><label for=cbx_13> Du finner bokstaven brukeren trykket på i <code>state[&quot;pressed_button&quot;]</code>. Det kan være lurt å lagre denne i en egen variabel, så du slipper å skrive <code>state[&quot;pressed_button&quot;]</code> mange ganger.</label></p> </li> <li class=task-list-item> <p><input type=checkbox id=cbx_14><label for=cbx_14> Dersom bokstaven finnes i <code>state[&quot;remaining_letters&quot;]</code>, må programmet gjøre det følgende:</label></p> <ul> <li>Fjern bokstaven fra lista</li> <li>Dersom bokstaven finnes i det hemmelige ordet vårt må du oppdatere <code>state[&quot;display_string&quot;]</code>, hvis ikke har brukeren brukt opp ett forsøk, og du må legge til en til <code>state[&quot;used_tries&quot;]</code>.</li> </ul> </li> <li class=task-list-item> <p><input type=checkbox id=cbx_15><label for=cbx_15> Sjekk om brukeren har brukt opp alle forsøkene sine. Dersom det er tilfelle må du endre på <code>state[&quot;help_text&quot;]</code> til <code>&quot;You lost!&quot;</code>. Til slutt må du kalle funksjonen <code>game_over()</code>.</label></p> <p><strong>Hint:</strong> Sjekk om <code>state[&quot;used_tries&quot;]</code> er større eller lik <code>TRIES</code>.</p> </li> <li class=task-list-item> <p><input type=checkbox id=cbx_16><label for=cbx_16> Vi må også sjekke om brukeren har gjettet ordet. En måte dette kan gjøres på er å sjekke hvor mange <code>&quot;_&quot;</code> det er i <code>state[&quot;display_string&quot;]</code>. Bruk <code>s.count(&quot;_&quot;)</code> for å telle antall understreker. Dersom det ikke er flere understreker har brukeren vunnet spillet, og du må da endre <code>state[&quot;help_text&quot;]</code> til <code>&quot;You won!&quot;</code> og kalle <code>game_over()</code>.</label></p> </li> </ul> <section class=flag id=test-spillet-ditt-2> <h2 class=flag id=test-spillet-ditt-2>Test spillet ditt</h2> <p>Lagre endringene dine i <code>hangman.py</code>, og kjør spillet ditt:</p> <pre><code class=sh>pgzrun hangman.py\n</code></pre> <p>Spillet skal nå fungere fullt og helt. Nå er det noen ting vi må teste:</p> <ul class=task-list> <li class=task-list-item> <p><input type=checkbox id=cbx_17><label for=cbx_17> Slik kan det se ut når spilleren vinner.</label></p> <figure><img src='+s(3460)+' alt=""></figure> </li> <li class=task-list-item> <p><input type=checkbox id=cbx_18><label for=cbx_18> Når spilleren taper kan det se ut omtrent som i bildet under. Pass på det følgende:</label></p> <ul class=task-list> <li class=task-list-item><input type=checkbox id=cbx_19><label for=cbx_19> Det skal ikke være mulig å taste inn flere bokstaver. Dersom du har mulighet til dette har du glemt å sette <code>state[&quot;running&quot;] = False</code> i <code>game_over()</code>.</label></li> <li class=task-list-item><input type=checkbox id=cbx_20><label for=cbx_20> Pass på at du viser løsningsordet nederst.</label></li> </ul> <figure><img src='+s(3459)+' alt=""></figure> </li> </ul> </section> </section> '},3457:function(e,t,s){e.exports=s.p+"_/oppgaver/src/python/hangman2/hangman_blank_screen.fc2b79.png"},3458:function(e,t,s){e.exports=s.p+"_/oppgaver/src/python/hangman2/hangman_initial_screen.422631.png"},3459:function(e,t,s){e.exports=s.p+"_/oppgaver/src/python/hangman2/hangman_lost_game.6c3c6a.png"},3460:function(e,t,s){e.exports=s.p+"_/oppgaver/src/python/hangman2/hangman_won_game.2cafef.png"}});